// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eBilet.Data;

namespace eBilet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211224201350_eBilet")]
    partial class eBilet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eBilet.Models.Aktör", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilResmiURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aktörler");
                });

            modelBuilder.Entity("eBilet.Models.Aktör_Film", b =>
                {
                    b.Property<int>("AktörId")
                        .HasColumnType("int");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.HasKey("AktörId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("Aktörler_Filmler");
                });

            modelBuilder.Entity("eBilet.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Açıklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BaşlangıçTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitişTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmKategori")
                        .HasColumnType("int");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("ResimURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SinemaId")
                        .HasColumnType("int");

                    b.Property<int>("YapımcıId")
                        .HasColumnType("int");

                    b.Property<string>("İsim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SinemaId");

                    b.HasIndex("YapımcıId");

                    b.ToTable("Fimler");
                });

            modelBuilder.Entity("eBilet.Models.Sinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Açıklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İsim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sinemalar");
                });

            modelBuilder.Entity("eBilet.Models.Yapımcı", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilResmiURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yapımcılar");
                });

            modelBuilder.Entity("eBilet.Models.Aktör_Film", b =>
                {
                    b.HasOne("eBilet.Models.Aktör", "Aktör")
                        .WithMany("Aktörler_Filmler")
                        .HasForeignKey("AktörId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eBilet.Models.Film", "Film")
                        .WithMany("Aktörler_Filmler")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aktör");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("eBilet.Models.Film", b =>
                {
                    b.HasOne("eBilet.Models.Sinema", "Sinema")
                        .WithMany("Filmler")
                        .HasForeignKey("SinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eBilet.Models.Yapımcı", "Yapımcı")
                        .WithMany("Filmler")
                        .HasForeignKey("YapımcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinema");

                    b.Navigation("Yapımcı");
                });

            modelBuilder.Entity("eBilet.Models.Aktör", b =>
                {
                    b.Navigation("Aktörler_Filmler");
                });

            modelBuilder.Entity("eBilet.Models.Film", b =>
                {
                    b.Navigation("Aktörler_Filmler");
                });

            modelBuilder.Entity("eBilet.Models.Sinema", b =>
                {
                    b.Navigation("Filmler");
                });

            modelBuilder.Entity("eBilet.Models.Yapımcı", b =>
                {
                    b.Navigation("Filmler");
                });
#pragma warning restore 612, 618
        }
    }
}
